scalar DateTime

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

type Query {
    user: User!
}

type Mutation {
    createAccount(username: String!, password: String!): User!
    deleteAccount: Boolean!
    generatePairCode: Code!
    revokePairCode(code: String!): Boolean!
    acceptPairCode(code: String!): Boolean!
    deletePair(userId: ID!): Boolean!

    push(userIds: [ID!]!): [PushResult!]!
}

type Subscription {
    pair: PairSubscription!

    # [trigger] success push
    push: User!
}

type User {
    id: ID!
    username: String!
    createdAt: DateTime!

    pairs: [User!]!
    pushes: [User!]!
}

type Code {
    code: String!
    expires: DateTime!
}

type PushResult {
    user: User!
    success: Boolean!
}

type PairSubscription {
    type: PairAction!
    user: User!
}

enum PairAction {
    ADD
    DELETE
}
